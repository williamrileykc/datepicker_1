/*********/
/* Mixins
/*********/

// Useful mixins downloaded from https://bitbucket.org/calebzahnd/sass-mixins


//The ol' cover EVERYTHING block. Handy.
@mixin coverer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

// A darn fine way to center something
@mixin centerer {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	-webkit-transform: translateY(-50%, -50%); /* Chrome, Safari, Opera */		
}

//Vertical align in 3 lines of css.
@mixin vertical-align {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
	-webkit-transform: translateY(-50%); /* Chrome, Safari, Opera */	
}

@mixin word-wrap() {
	word-break:     break-word;
	-webkit-hyphens: auto;
	-moz-hyphens:    auto;
	hyphens:         auto;
}

@mixin ellipsis() {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@function black($opacity) {
	@return rgba(black, $opacity)
}
@function white($opacity) {
	@return rgba(white, $opacity)
}

// There's a lot of different clearfix hacks out there on the web. This one (http://nicolasgallagher.com/micro-clearfix-hack) I've found it to be the most solid one. Works in IE6 and up.
@mixin clearfix {
	*zoom: 1;
	&:before, &:after {
	    content: " ";
	    display: table;
 	}
	&:after {
		clear: both;
	}
}

%clearfix {
	@include clearfix();
}
.clearfix {
	@include clearfix();
}

@mixin resetUL {
	list-style-type: none;
	margin: 0;
	padding: 0;
	li {
		margin: 0;
		padding: 0;
	}
}

@mixin visuallyhidden {
	position: absolute;
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
}

%isVisuallyHidden {
	@include visuallyhidden();
}

// Mixin for Setting REM's with a PX fallback. Usage: @include font-size(16px);
// Requires html set to font-size: 62.5%;
@mixin font-size($values) {
  $px : ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    font-size: $px;
  } @else {
    font-size: $px;
    font-size: $rem;
  }
}